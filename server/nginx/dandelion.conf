
    client_max_body_size 0;
    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
    proxy_temp_path /var/tmp;
    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_proxied any;
    gzip_buffers 16 8k;

    upstream dandelion_backend {
      server 127.0.0.1:3000;
    }

    server {

        server_name localhost;
        listen 80;

        #Uncomment following lines to add SSL support:
        #
        #Please specify the routes to your certificate, key and dhparams (if generated)
        #in ssl_certificate, ssl_key and ssl_dhparam respectively
        #listen 443 ssl default_server;

        #SSL
        #ssl_session_cache   shared:SSL:20m;
        #ssl_session_timeout 30m;
        #ssl_certificate /Users/yarilolisure/PFC/dandelion-backend/server/assets/server.crt;
        #ssl_certificate_key /Users/yarilolisure/PFC/dandelion-backend/server/assets/server.key;

        #ssl_session_tickets on;

        #ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;
        #ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
        #ssl_dhparam /Users/yarilolisure/PFC/dandelion-backend/server/assets/dhparam.pem;
        #add_header Strict-Transport-Security "max-age=31536000"; Uncomment to avoid modern browsers to ask if we support HTTP and HTTPS

        #Serve angular app, todo # add caching options
        location / {
           add_header Access-Control-Allow-Origin "$http_origin";
           add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
           add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
           add_header Access-Control-Allow-Credentials "true";
           root /Users/yarilolisure/PFC/dandelion-backend/client/app;
           expires max;
           proxy_cache one;
           proxy_cache_key sfs$request_uri$scheme;
        }

        #angular app and clients will use this route and express will redirect
        #to route below (authorizated) after checking with the db
        location /api {
            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            add_header Access-Control-Allow-Credentials "true";
            client_body_temp_path /Users/yarilolisure/PFC/dandelion-backend/data/tmp;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_pass_request_body on;
            proxy_pass_request_headers on;
            proxy_pass http://dandelion_backend;
			proxy_read_timeout 1800s; #30 min
			proxy_send_timeout 1800s;
        }

        location /authorizated_download{
                  internal;
                  alias /Users/yarilolisure/PFC/dandelion-backend/data;
                  expires 48h;
                  proxy_cache one;
                  proxy_cache_key sfs$request_uri$scheme;
                  add_header Cache-Control "public";
        }
        location /authorizated_compressed{
                  internal;
                  alias /Users/yarilolisure/PFC/dandelion-backend/data_compressed;
                  expires 48h;
                  proxy_cache one;
                  proxy_cache_key sfs$request_uri$scheme;
                  add_header Cache-Control "public";
        }
        location /authorizated {
          allow 127.0.0.1;
          deny all;
          alias /Users/yarilolisure/PFC/dandelion-backend/data;
          client_body_temp_path /Users/yarilolisure/PFC/dandelion-backend/data/tmp;
          dav_methods PUT DELETE MKCOL COPY MOVE;
          dav_ext_methods PROPFIND OPTIONS;
          expires 48h;
          proxy_cache one;
          proxy_cache_key sfs$request_uri$scheme;
        }

    }
